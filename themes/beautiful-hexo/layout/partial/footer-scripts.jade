if process.argv.indexOf('server') === -1
  script(src=url_for("/js/sw-register.js"))

script(src=url_for("/js/jquery-1.11.2.min.js"))
script(src=url_for("/js/bootstrap.min.js"))
script(src=url_for("/js/main.js"))

script(src='https://cdn.jsdelivr.net/algoliasearch/3/algoliasearchLite.min.js')
script(src='https://cdn.jsdelivr.net/autocomplete.js/0/autocomplete.min.js')

script.
  var algoliaConfig = document.querySelector('meta[property="algolia:search"]').dataset

  // Initialize autocomplete menu
  var client = algoliasearch(algoliaConfig.applicationId, algoliaConfig.apiKey)
  var index = client.initIndex(algoliaConfig.indexName)
  //initialize autocomplete on search input (ID selector must match)
  autocomplete('#search-box', { hint: false, appendTo: 'body', debug: true }, {
    source: autocomplete.sources.hits(index, {hitsPerPage: 5}),
    //value to be displayed in input control after user's suggestion selection
    displayKey: 'name',
    //hash of templates used when rendering dataset
    templates: {
    //'suggestion' templating function used to render a single suggestion
    suggestion: function(suggestion) {
      let link = '<a href="'+ suggestion.permalink +'">' +
        suggestion._highlightResult.title.value + '</a>'

      // @Todo: add <span> with type before the link
      return link
      }
    }
  })


include google_analytics